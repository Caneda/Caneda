Copyright (C) 1994, 1995, 1996, 1999, 2000, 2001, 2002 Free Software
Foundation, Inc.

   This file is free documentation; the Free Software Foundation gives
unlimited permission to copy, distribute and modify it.

Basic Installation
==================

   These are generic installation instructions.

   If you need to do unusual things to compile the package, please try
to figure out how `cmake' could check whether to do them, and mail
diffs or instructions to the address given in the `README' so they can
be considered for the next release.

The simplest way to compile this package is:

  1. `cd' to the directory containing the package's source code and type
     `cmake ./' to configure the package for your system.
     If you're using `csh' on an old version of System V, you might need 
     to type `sh ./cmake ./' instead to prevent `csh' from 
     trying to execute `cmake' itself.

     Running `cmake' takes awhile.  While running, it prints some
     messages telling which features it is checking for.

  2. Type `make' to compile the package.

  3. Optionally, type `make check' to run any self-tests that come with
     the package.

  4. Type `make install' to install the programs and any data files and
     documentation.

Compilers and Options
=====================

   Some systems require unusual options for compilation or linking that
`cmake' does not know about.  Run `./cmake --help' for details on some
of the pertinent environment variables.

   You can give `cmake' initial values for configuration parameters
by setting variables in the command line or in the environment.  Here
is an example:

     ./cmake CC=c89 CFLAGS=-O2 LIBS=-lposix

   *Note Defining Variables::, for more details.

Installation Names
==================

   By default, `make install' will install the package's files in
`/usr/local/bin', `/usr/local/man', etc.  You can specify an
installation prefix other than `/usr/local' by giving `cmake' the
option `--prefix=PATH'.

   You can specify separate installation prefixes for
architecture-specific files and architecture-independent files.  If you
give `cmake' the option `--exec-prefix=PATH', the package will use
PATH as the prefix for installing programs and libraries.
Documentation and other data files will still use the regular prefix.

   In addition, if you use an unusual directory layout you can give
options like `--bindir=PATH' to specify different values for particular
kinds of files.  Run `configure --help' for a list of the directories
you can set and what kinds of files go in them.

   If the package supports it, you can cause programs to be installed
with an extra prefix or suffix on their names by giving `configure' the
option `--program-prefix=PREFIX' or `--program-suffix=SUFFIX'.